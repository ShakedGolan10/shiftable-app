DataStructure: {

userEmployee: {
		id: string,
		email: string,
		fullName: string,
		employerId: string,
        blockedShifts: shiftIds[]
	
}	
	userEmployer: {
		id,
		name: string,
		email: string
		applicationTime: {
                day: number,
                time: "hhmm"
            },
        employerMsg : string[],
		employees: string[],
        weeklyWorkflow: ShiftSlot[],
        application_rules {
            minDays: number,
            numOfCant: 2
            mandatoryDay: string,
            mandatoryShifts {
                friday: 08-13
            }[],
            optionalShifts [
                [0]: {
                minChoices: number,
                shiftsToChoose: {
                friday: 08-13
                },
            }]
        }
    }

    ShiftSlot {
        shiftId: string
        shift: string
    }
    
    shiftsRequests { 
    	employeeId: string,
	    employerId: string,
        applyTime: Date
        shifts: {
        sunday: Shift[]
        monday: Shift[]
        tuesday: Shift[]
        wednesday: Shift[]
        thursday: Shift[]
        firday: Shift[]
        saturday: Shift[]
        }
}
    Shift {
    shift: string
    isSelected: boolean
    isCant: boolean
  }
            

}


Firebase structure :

    Users collection {
        documantId - employeeUID || employerUID {
            name/fullName = string,
            email = string,
            blockedShifts: shiftIds[],
            employerId = string  
            /* employee structure ends here */ 
            ********************************************
            else { /* employer structure continue */
                applicationTime {
                day = number,
                time = string
            },
            employees = string[],
            employerMsg = string[],
            weeklyWorkflow = map {
                sunday = array [
                            0 = {shiftId: string, shift: string (shift hours in hh:mm-hh:mm)} \
                            1 = {shiftId: string, shift: string (shift hours in hh:mm-hh:mm)}  ---> if no shift -> no value in the map (no certain day key)
                            2 = {shiftId: string, shift: string (shift hours in hh:mm-hh:mm)} /
                        ],  
                 }
            }
        application_rules {
            minDays: number,
            mandatoryShifts {
                friday: 08-13,
                sunday: 09-16
            },
            optionalShifts [
                minChoices: number,
                shiftsToChoose: {
                friday: 08-13
                },
            ]
            numOfCant: number

        }
           
        }
    }
    
    employeesShifts collection {
        documantId - employerUID {
            subCollection - employeeUID {
                documantId - `${year}/${week number}` {
                    employeeName = string,
                    shifts = map {
                        sunday = array [
                            0 = string (shift hours in hh:mm-hh:mm) \
                            1 = string (shift hours in hh:mm-hh:mm)  ---> if no shift -> no value in the map (no certain day key)
                            2 = string (shift hours in hh:mm-hh:mm) /
                        ], 
                        Tuesday = array... and so on.
                    }
                }
            }
        }

    }


    ShiftsReq collection {
        documantId - employerUID
        subCollection ForDate {
    	    documentId: date,
            subCollection employee {
                documantId: employeeId
            shifts: {
                sunday: Shift[]
                monday: Shift[]
                tuesday: Shift[]
                wednesday: Shift[]
                thursday: Shift[]
                firday: Shift[]
                saturday: Shift[]
                }
            }
        }
    }

    Shift {
    shiftId: string
    shift: string
    isSelected: boolean
    isCant: boolean
  }
            


    
